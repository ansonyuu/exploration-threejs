{"ast":null,"code":"var _jsxFileName = \"/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/grid.js\";\n// Component: Grid\n// Def: The grid inside the chestmodal that allows all the blocks to live\nimport React, { Image } from \"react\";\nimport SmartBlocks from \"./smartBlocks\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport logo from \"../assets/items/logo.png\";\n\nconst Grid = ({\n  chestState,\n  updateChestState,\n  inventoryType\n}) => {\n  // Function to update the immer state\n  function updateItem(blockFrom, blockTo, item) {\n    // If dragging to new inventory type run this\n    if (item.inventoryType != inventoryType) {\n      updateChestState(draft => {\n        draft[item.inventoryType][blockFrom].item = null;\n        draft[inventoryType][blockTo].item = item.id;\n      }); // Update item from the same inventory type\n    } else {\n      updateChestState(draft => {\n        draft[inventoryType][blockFrom].item = null;\n        draft[inventoryType][blockTo].item = item.id;\n      });\n    }\n  } // Function will grab where our blocks are coming from and going to and store them in a var for their ids\n  // then run the update item function\n\n\n  const moveItem = (from, to, item) => {\n    const blockFrom = `block${from.replaceAll(\",\", \"\")}`;\n    const blockTo = `block${to.replaceAll(\",\", \"\")}`;\n    updateItem(blockFrom, blockTo, item);\n  }; // Get the the X & Y of block\n\n\n  const getXYPosition = i => {\n    const x = i % 9;\n    const y = Math.floor(i / 9);\n    return {\n      x,\n      y\n    };\n  }; // Return X & Y of the block in an array string\n\n\n  const getPosition = i => {\n    const {\n      x,\n      y\n    } = getXYPosition(i);\n    const block = [x, y];\n    return `${block}`;\n  };\n\n  return /*#__PURE__*/React.createElement(Image, {\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Grid;","map":{"version":3,"sources":["/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/grid.js"],"names":["React","Image","SmartBlocks","DndProvider","HTML5Backend","logo","Grid","chestState","updateChestState","inventoryType","updateItem","blockFrom","blockTo","item","draft","id","moveItem","from","to","replaceAll","getXYPosition","i","x","y","Math","floor","getPosition","block"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,gBAAd;AAAgCC,EAAAA;AAAhC,CAAD,KAAqD;AAChE;AACA,WAASC,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8C;AAC5C;AACA,QAAIA,IAAI,CAACJ,aAAL,IAAsBA,aAA1B,EAAyC;AACvCD,MAAAA,gBAAgB,CAAEM,KAAD,IAAW;AAC1BA,QAAAA,KAAK,CAACD,IAAI,CAACJ,aAAN,CAAL,CAA0BE,SAA1B,EAAqCE,IAArC,GAA4C,IAA5C;AACAC,QAAAA,KAAK,CAACL,aAAD,CAAL,CAAqBG,OAArB,EAA8BC,IAA9B,GAAqCA,IAAI,CAACE,EAA1C;AACD,OAHe,CAAhB,CADuC,CAKvC;AACD,KAND,MAMO;AACLP,MAAAA,gBAAgB,CAAEM,KAAD,IAAW;AAC1BA,QAAAA,KAAK,CAACL,aAAD,CAAL,CAAqBE,SAArB,EAAgCE,IAAhC,GAAuC,IAAvC;AACAC,QAAAA,KAAK,CAACL,aAAD,CAAL,CAAqBG,OAArB,EAA8BC,IAA9B,GAAqCA,IAAI,CAACE,EAA1C;AACD,OAHe,CAAhB;AAID;AACF,GAhB+D,CAkBhE;AACA;;;AACA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWL,IAAX,KAAoB;AACnC,UAAMF,SAAS,GAAI,QAAOM,IAAI,CAACE,UAAL,CAAgB,GAAhB,EAAqB,EAArB,CAAyB,EAAnD;AACA,UAAMP,OAAO,GAAI,QAAOM,EAAE,CAACC,UAAH,CAAc,GAAd,EAAmB,EAAnB,CAAuB,EAA/C;AACAT,IAAAA,UAAU,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,CAAV;AACD,GAJD,CApBgE,CA0BhE;;;AACA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3B,UAAMC,CAAC,GAAGD,CAAC,GAAG,CAAd;AACA,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,CAAf,CAAV;AACA,WAAO;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAP;AACD,GAJD,CA3BgE,CAiChE;;;AACA,QAAMG,WAAW,GAAIL,CAAD,IAAO;AACzB,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWH,aAAa,CAACC,CAAD,CAA9B;AACA,UAAMM,KAAK,GAAG,CAACL,CAAD,EAAIC,CAAJ,CAAd;AACA,WAAQ,GAAEI,KAAM,EAAhB;AACD,GAJD;;AAMA,sBAAO,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEtB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAzCD;;AA2CA,eAAeC,IAAf","sourcesContent":["// Component: Grid\n// Def: The grid inside the chestmodal that allows all the blocks to live\n\nimport React, { Image } from \"react\";\nimport SmartBlocks from \"./smartBlocks\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport logo from \"../assets/items/logo.png\";\n\nconst Grid = ({ chestState, updateChestState, inventoryType }) => {\n  // Function to update the immer state\n  function updateItem(blockFrom, blockTo, item) {\n    // If dragging to new inventory type run this\n    if (item.inventoryType != inventoryType) {\n      updateChestState((draft) => {\n        draft[item.inventoryType][blockFrom].item = null;\n        draft[inventoryType][blockTo].item = item.id;\n      });\n      // Update item from the same inventory type\n    } else {\n      updateChestState((draft) => {\n        draft[inventoryType][blockFrom].item = null;\n        draft[inventoryType][blockTo].item = item.id;\n      });\n    }\n  }\n\n  // Function will grab where our blocks are coming from and going to and store them in a var for their ids\n  // then run the update item function\n  const moveItem = (from, to, item) => {\n    const blockFrom = `block${from.replaceAll(\",\", \"\")}`;\n    const blockTo = `block${to.replaceAll(\",\", \"\")}`;\n    updateItem(blockFrom, blockTo, item);\n  };\n\n  // Get the the X & Y of block\n  const getXYPosition = (i) => {\n    const x = i % 9;\n    const y = Math.floor(i / 9);\n    return { x, y };\n  };\n\n  // Return X & Y of the block in an array string\n  const getPosition = (i) => {\n    const { x, y } = getXYPosition(i);\n    const block = [x, y];\n    return `${block}`;\n  };\n\n  return <Image src={logo} />;\n};\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}