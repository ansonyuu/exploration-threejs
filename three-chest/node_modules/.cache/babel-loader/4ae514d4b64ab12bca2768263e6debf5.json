{"ast":null,"code":"var _jsxFileName = \"/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/smartBlocks.js\";\n// Component: SmartBlocks\n// Def: These are the individual blocks that know their position on the grid and accept draggable items\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\"; // Components\n\nimport Item from \"./item\";\n\nconst SmartBlocks = ({\n  item,\n  position,\n  moveItem,\n  inventoryType\n}) => {\n  // Using the useDrop hook from dnd\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: \"item\",\n    drop: item => {\n      moveItem(item.position, position, item);\n    },\n    // collect allows to monitor certain commands such is isOver for when we are over a specific block\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isOver ? \"grid-item is-over\" : \"grid-item\"}`,\n    ref: drop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, item.item && /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    position: position,\n    inventoryType: inventoryType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default SmartBlocks;","map":{"version":3,"sources":["/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/smartBlocks.js"],"names":["React","useDrop","Item","SmartBlocks","item","position","moveItem","inventoryType","isOver","drop","accept","collect","monitor"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAAiD;AACnE;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBR,OAAO,CAAC;AACjCS,IAAAA,MAAM,EAAE,MADyB;AAEjCD,IAAAA,IAAI,EAAGL,IAAD,IAAU;AACdE,MAAAA,QAAQ,CAACF,IAAI,CAACC,QAAN,EAAgBA,QAAhB,EAA0BD,IAA1B,CAAR;AACD,KAJgC;AAKjC;AACAO,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBJ,MAAAA,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAR;AADW,KAAd;AANwB,GAAD,CAAlC;AAWA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEA,MAAM,GAAG,mBAAH,GAAyB,WAAY,EAA9D;AAAiE,IAAA,GAAG,EAAEC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACA,IAAL,iBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,QAAQ,EAAEC,QAA5B;AAAsC,IAAA,aAAa,EAAEE,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD,CApBD;;AAsBA,eAAeJ,WAAf","sourcesContent":["// Component: SmartBlocks\n// Def: These are the individual blocks that know their position on the grid and accept draggable items\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\n// Components\nimport Item from \"./item\";\n\nconst SmartBlocks = ({ item, position, moveItem, inventoryType }) => {\n  // Using the useDrop hook from dnd\n  const [{ isOver }, drop] = useDrop({\n    accept: \"item\",\n    drop: (item) => {\n      moveItem(item.position, position, item);\n    },\n    // collect allows to monitor certain commands such is isOver for when we are over a specific block\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div className={`${isOver ? \"grid-item is-over\" : \"grid-item\"}`} ref={drop}>\n      {item.item && (\n        <Item item={item} position={position} inventoryType={inventoryType} />\n      )}\n    </div>\n  );\n};\n\nexport default SmartBlocks;\n"]},"metadata":{},"sourceType":"module"}