{"ast":null,"code":"var _jsxFileName = \"/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/three/cube.js\";\nimport React, { Component, useRef, Suspense } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport { softShadows, MeshWobbleMaterial, OrbitControls } from \"@react-three/drei\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\n\nconst InnerMesh = ({\n  position,\n  args,\n  tweet\n}) => {\n  const mesh = useRef(null);\n  const side_abstract = useLoader(TextureLoader, tweet.ganImage);\n  const side_tweet = useLoader(TextureLoader, tweet.tweetImage);\n  useFrame(() => mesh.current.rotation.y += 0.01);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    position: position,\n    ref: mesh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_abstract,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_abstract,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst OuterMesh = ({\n  position,\n  color,\n  opacity,\n  speed,\n  args\n}) => {\n  const mesh = useRef(null); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.001));\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    position: position,\n    ref: mesh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MeshWobbleMaterial, {\n    attach: \"material\",\n    color: \"white\",\n    speed: speed = 1,\n    factor: 0.6,\n    transparent: true,\n    visible: true,\n    depthTest: true,\n    wireframe: true,\n    opacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction Cube({\n  tweet\n}) {\n  return /*#__PURE__*/React.createElement(Canvas, {\n    shadowMap: true,\n    colorManagement: true,\n    camera: {\n      position: [-5, 2, 10],\n      fov: 60\n    },\n    gl: {\n      antialias: false,\n      alpha: false\n    },\n    onCreated: ({\n      gl\n    }) => gl.setClearColor(\"black\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stars, {\n    radius: 100 // Radius of the inner sphere (default=100)\n    ,\n    depth: 50 // Depth of area where stars should fit (default=50)\n    ,\n    count: 5000 // Amount of stars (default=5000)\n    ,\n    factor: 10 // Size factor (default=4)\n    ,\n    saturation: 0 // Saturation 0-1 (default=0)\n    ,\n    fade: true // Faded dots (default=false)\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"directionalLight\", {\n    color: \"white\",\n    castShadow: true,\n    position: [0, 10, 0],\n    intensity: 1,\n    \"shadow-mapSize-width\": 1024,\n    \"shadow-mapSize-height\": 1024,\n    \"shadow-camera-far\": 50,\n    \"shadow-camera-left\": -10,\n    \"shadow-camera-right\": 10,\n    \"shadow-camera-top\": 10,\n    \"shadow-camera-bottom\": -10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-10, 0, -20],\n    intensity: 0.2,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [0, -10, 0],\n    intensity: 1,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -3, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [100, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"shadowMaterial\", {\n    attach: \"material\",\n    opacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InnerMesh, {\n    position: [0, 1, 0],\n    args: [2, 2, 2],\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(OuterMesh, {\n    position: [0, 1, 0],\n    args: [3, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Cube;","map":{"version":3,"sources":["/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/three/cube.js"],"names":["React","Component","useRef","Suspense","Canvas","useFrame","useLoader","softShadows","MeshWobbleMaterial","OrbitControls","TextureLoader","InnerMesh","position","args","tweet","mesh","side_abstract","ganImage","side_tweet","tweetImage","current","rotation","y","OuterMesh","color","opacity","speed","Cube","fov","antialias","alpha","gl","setClearColor","Math","PI"],"mappings":"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","sourcesContent":["import React, { Component, useRef, Suspense } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport {\n  softShadows,\n  MeshWobbleMaterial,\n  OrbitControls,\n} from \"@react-three/drei\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\n\nconst InnerMesh = ({ position, args, tweet }) => {\n  const mesh = useRef(null);\n  const side_abstract = useLoader(TextureLoader, tweet.ganImage);\n  const side_tweet = useLoader(TextureLoader, tweet.tweetImage);\n  useFrame(() => (mesh.current.rotation.y += 0.01));\n  return (\n    <mesh castShadow position={position} ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={args} />\n      <meshStandardMaterial map={side_abstract} attachArray=\"material\" />\n      <meshStandardMaterial map={side_abstract} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n    </mesh>\n  );\n};\n\nconst OuterMesh = ({ position, color, opacity, speed, args }) => {\n  const mesh = useRef(null);\n  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.001));\n  return (\n    <mesh castShadow position={position} ref={mesh}>\n      <sphereBufferGeometry attach=\"geometry\" args={args} />\n      <MeshWobbleMaterial\n        attach=\"material\"\n        color=\"white\"\n        speed={(speed = 1)}\n        factor={0.6}\n        transparent={true}\n        visible={true}\n        depthTest={true}\n        wireframe={true}\n        opacity={0.3}\n      />\n    </mesh>\n  );\n};\n\nfunction Cube({ tweet }) {\n  return (\n    <Canvas\n      shadowMap\n      colorManagement\n      camera={{ position: [-5, 2, 10], fov: 60 }}\n      gl={{ antialias: false, alpha: false }}\n      onCreated={({ gl }) => gl.setClearColor(\"black\")}\n    >\n      <Stars\n        radius={100} // Radius of the inner sphere (default=100)\n        depth={50} // Depth of area where stars should fit (default=50)\n        count={5000} // Amount of stars (default=5000)\n        factor={10} // Size factor (default=4)\n        saturation={0} // Saturation 0-1 (default=0)\n        fade // Faded dots (default=false)\n      />\n      <ambientLight intensity={0.5} color=\"white\" />\n      <directionalLight\n        color=\"white\"\n        castShadow\n        position={[0, 10, 0]}\n        intensity={1}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n        shadow-camera-far={50}\n        shadow-camera-left={-10}\n        shadow-camera-right={10}\n        shadow-camera-top={10}\n        shadow-camera-bottom={-10}\n      />\n      <pointLight position={[-10, 0, -20]} intensity={0.2} color=\"white\" />\n      <pointLight position={[0, -10, 0]} intensity={1} color=\"white\" />\n      <group>\n        <mesh\n          receiveShadow\n          rotation={[-Math.PI / 2, 0, 0]}\n          position={[0, -3, 0]}\n        >\n          <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n          <shadowMaterial attach=\"material\" opacity={0.3} />\n        </mesh>\n\n        <Suspense fallback={null}>\n          <InnerMesh position={[0, 1, 0]} args={[2, 2, 2]} tweet={tweet} />\n        </Suspense>\n\n        <OuterMesh position={[0, 1, 0]} args={[3, 8]} />\n      </group>\n    </Canvas>\n  );\n}\n\nexport default Cube;\n"]},"metadata":{},"sourceType":"module"}