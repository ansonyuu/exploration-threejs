{"ast":null,"code":"var _jsxFileName = \"/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/three/cube.js\";\nimport React, { Component, useRef, Suspense } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport { softShadows, MeshWobbleMaterial, OrbitControls, Stars } from \"@react-three/drei\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\nimport logo from \"../../assets/logo.png\";\n\nconst InnerMesh = ({\n  position,\n  args,\n  tweet\n}) => {\n  const mesh = useRef(null);\n  const side_abstract = useLoader(TextureLoader, logo);\n  const side_tweet = useLoader(TextureLoader, logo); // useFrame(() => (mesh.current.rotation.y += 0.01));\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    position: position,\n    ref: mesh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_abstract,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_abstract,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: side_tweet,\n    attachArray: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst OuterMesh = ({\n  position,\n  color,\n  opacity,\n  speed,\n  args\n}) => {\n  const mesh = useRef(null); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.001));\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    position: position,\n    ref: mesh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MeshWobbleMaterial, {\n    attach: \"material\",\n    color: \"white\",\n    speed: speed = 1,\n    factor: 0.6,\n    transparent: true,\n    visible: true,\n    depthTest: true,\n    wireframe: true,\n    opacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction Cube(props) {\n  const openChestCubeAnimation = useSpring({\n    rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],\n    position: props.open ? [0, -1.5, 0] : [0, 0, 0],\n    size: props.open ? [10, 10, 10] : [1, 1, 1]\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(a.group, {\n    args: openChestCubeAnimation.size,\n    position: openChestCubeAnimation.rotation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -3, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [100, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"shadowMaterial\", {\n    attach: \"material\",\n    opacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InnerMesh, {\n    args: [2, 2, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(OuterMesh, {\n    position: [0, 0, 0],\n    args: [3, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Cube;","map":{"version":3,"sources":["/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/src/components/three/cube.js"],"names":["React","Component","useRef","Suspense","Canvas","useFrame","useLoader","softShadows","MeshWobbleMaterial","OrbitControls","Stars","useSpring","a","TextureLoader","logo","InnerMesh","position","args","tweet","mesh","side_abstract","side_tweet","OuterMesh","color","opacity","speed","Cube","props","openChestCubeAnimation","rotation","open","size","Math","PI"],"mappings":"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","sourcesContent":["import React, { Component, useRef, Suspense } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport {\n  softShadows,\n  MeshWobbleMaterial,\n  OrbitControls,\n  Stars,\n} from \"@react-three/drei\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\nimport logo from \"../../assets/logo.png\";\n\nconst InnerMesh = ({ position, args, tweet }) => {\n  const mesh = useRef(null);\n  const side_abstract = useLoader(TextureLoader, logo);\n  const side_tweet = useLoader(TextureLoader, logo);\n  // useFrame(() => (mesh.current.rotation.y += 0.01));\n  return (\n    <mesh castShadow position={position} ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={args} />\n      <meshStandardMaterial map={side_abstract} attachArray=\"material\" />\n      <meshStandardMaterial map={side_abstract} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n      <meshStandardMaterial map={side_tweet} attachArray=\"material\" />\n    </mesh>\n  );\n};\n\nconst OuterMesh = ({ position, color, opacity, speed, args }) => {\n  const mesh = useRef(null);\n  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.001));\n  return (\n    <mesh castShadow position={position} ref={mesh}>\n      <sphereBufferGeometry attach=\"geometry\" args={args} />\n      <MeshWobbleMaterial\n        attach=\"material\"\n        color=\"white\"\n        speed={(speed = 1)}\n        factor={0.6}\n        transparent={true}\n        visible={true}\n        depthTest={true}\n        wireframe={true}\n        opacity={0.3}\n      />\n    </mesh>\n  );\n};\n\nfunction Cube(props) {\n  const openChestCubeAnimation = useSpring({\n    rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],\n    position: props.open ? [0, -1.5, 0] : [0, 0, 0],\n    size: props.open ? [10, 10, 10] : [1, 1, 1],\n  });\n\n  return (\n    <group>\n      <a.group\n        args={openChestCubeAnimation.size}\n        position={openChestCubeAnimation.rotation}\n      >\n        <mesh\n          receiveShadow\n          rotation={[-Math.PI / 2, 0, 0]}\n          position={[0, -3, 0]}\n        >\n          <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n          <shadowMaterial attach=\"material\" opacity={0.3} />\n        </mesh>\n        <Suspense fallback={null}>\n          <InnerMesh args={[2, 2, 2]} />\n        </Suspense>\n      </a.group>\n\n      <OuterMesh position={[0, 0, 0]} args={[3, 8]} />\n    </group>\n  );\n}\n\nexport default Cube;\n"]},"metadata":{},"sourceType":"module"}