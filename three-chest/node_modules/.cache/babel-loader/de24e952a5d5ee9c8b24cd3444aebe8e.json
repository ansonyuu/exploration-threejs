{"ast":null,"code":"class Matrix3 {\n  constructor() {\n    Object.defineProperty(this, 'isMatrix3', {\n      value: true\n    });\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    const te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().fromArray(this.elements);\n  }\n\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    return this;\n  }\n\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrix3Column(this, 0);\n    yAxis.setFromMatrix3Column(this, 1);\n    zAxis.setFromMatrix3Column(this, 2);\n    return this;\n  }\n\n  setFromMatrix4(m) {\n    const me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  }\n\n  multiply(m) {\n    return this.multiplyMatrices(this, m);\n  }\n\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n    const a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n    const a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n    const a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n    const b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n    const b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n    const b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return this;\n  }\n\n  multiplyScalar(s) {\n    const te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  }\n\n  determinant() {\n    const te = this.elements;\n    const a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  }\n\n  getInverse(matrix, throwOnDegenerate) {\n    if (throwOnDegenerate !== undefined) {\n      console.warn(\"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\");\n    }\n\n    const me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  }\n\n  transpose() {\n    let tmp;\n    const m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  }\n\n  getNormalMatrix(matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  }\n\n  transposeIntoArray(r) {\n    const m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  }\n\n  setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n    const c = Math.cos(rotation);\n    const s = Math.sin(rotation);\n    this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n  }\n\n  scale(sx, sy) {\n    const te = this.elements;\n    te[0] *= sx;\n    te[3] *= sx;\n    te[6] *= sx;\n    te[1] *= sy;\n    te[4] *= sy;\n    te[7] *= sy;\n    return this;\n  }\n\n  rotate(theta) {\n    const c = Math.cos(theta);\n    const s = Math.sin(theta);\n    const te = this.elements;\n    const a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n    const a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n    te[0] = c * a11 + s * a21;\n    te[3] = c * a12 + s * a22;\n    te[6] = c * a13 + s * a23;\n    te[1] = -s * a11 + c * a21;\n    te[4] = -s * a12 + c * a22;\n    te[7] = -s * a13 + c * a23;\n    return this;\n  }\n\n  translate(tx, ty) {\n    const te = this.elements;\n    te[0] += tx * te[2];\n    te[3] += tx * te[5];\n    te[6] += tx * te[8];\n    te[1] += ty * te[2];\n    te[4] += ty * te[5];\n    te[7] += ty * te[8];\n    return this;\n  }\n\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n\n    for (let i = 0; i < 9; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < 9; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    const te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n\n}\n\nexport { Matrix3 };","map":{"version":3,"sources":["/Users/ansonyu/Projects/experiments/three-chest/React-Three-Minecraft-Chest/node_modules/three/src/math/Matrix3.js"],"names":["Matrix3","constructor","Object","defineProperty","value","elements","arguments","length","console","error","set","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","clone","fromArray","copy","m","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiply","multiplyMatrices","premultiply","a","b","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","multiplyScalar","s","determinant","c","d","e","f","g","h","i","getInverse","matrix","throwOnDegenerate","undefined","warn","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","Math","cos","sin","scale","rotate","theta","translate","equals","array","offset","toArray"],"mappings":"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","sourcesContent":["class Matrix3 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isMatrix3', { value: true } );\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tgetInverse( matrix, throwOnDegenerate ) {\n\n\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t}\n\n\t\tconst me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nexport { Matrix3 };\n"]},"metadata":{},"sourceType":"module"}